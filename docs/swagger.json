{
  "openapi": "3.0.2",
  "info": {
    "title": "Capstone Ecci",
    "version": "1.0",
    "description": "Ecci"
  },

  "servers": [
    { "url": "http://localhost:3000/" },
    { "url": "https://api.flattenbot.site/" }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "description": "Login as user.",
        "parameters": [],
        "tags": ["Login"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "description": "input email",
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "Success"
                    },
                    "data": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiZW1haWwiOiJyYWppaEBnbWFpbC5jb20iLCJsZXZlbCI6InVzZXIiLCJ1c2VybmFtZSI6InJhamloayIsImlhdCI6MTY5NTg2NDYxNCwiZXhwIjoxNjk1OTUxMDE0fQ.zi8Tsvtt0T-baWsHT43xQTJjKX4UY47tv5l4T3Zd7jg"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Pending Approve Status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "Pending Admin Approval."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/register": {
      "post": {
        "description": "Register User dan Admin",
        "tags": ["Register"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "username", "nik", "password", "level"],
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "username": {
                    "type": "string"
                  },
                  "nik": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "level": {
                    "type": "string",
                    "description": "jika tambah akun admin baru isi admin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "Success Create User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Error brand not found or didn't inserted the required fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "username field cannot contains whitespace"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "description": "get all data user",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "number of pagination",
            "schema": {
              "type": "number"
            },
            "value": 2,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "successfully fetch data user",
                  "data": [
                    {
                      "id": 4,
                      "email": "user1@eci.com",
                      "username": "user11",
                      "level": "user",
                      "is_activated": true,
                      "created_at": "2023-09-29T10:12:29.255Z",
                      "updated_at": "2023-09-29T16:17:30.597Z"
                    },
                    {
                      "id": 5,
                      "email": "user2@eci.com",
                      "username": "user12",
                      "level": "user",
                      "is_activated": false,
                      "created_at": "2023-09-29T10:12:34.898Z",
                      "updated_at": "2023-09-29T10:12:34.898Z"
                    },
                    {
                      "id": 12,
                      "email": "aaaaaaa@eci.com",
                      "username": "aaaaaaaaaa",
                      "level": "user",
                      "is_activated": false,
                      "created_at": "2023-09-29T14:25:30.386Z",
                      "updated_at": "2023-09-29T14:25:30.386Z"
                    },
                    {
                      "id": 14,
                      "email": "22222222@eci.com",
                      "username": "2222222",
                      "level": "user",
                      "is_activated": false,
                      "created_at": "2023-09-29T14:25:56.518Z",
                      "updated_at": "2023-09-29T14:25:56.518Z"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "data not found",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 404,
                  "result": "not found",
                  "message": "record data not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userid}": {
      "get": {
        "description": "details data user",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "data user id",
            "required": true,
            "value": 3
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "successfully get data user",
                  "data": {
                    "id": 4,
                    "email": "user1@eci.com",
                    "username": "user11",
                    "level": "user",
                    "is_activated": true,
                    "created_at": "2023-09-29T10:12:29.255Z",
                    "updated_at": "2023-09-29T16:17:30.597Z",
                    "is_deleted": false,
                    "document": {
                      "id": 4,
                      "user_id": 4,
                      "fullname": null,
                      "nik": "3201121601111111",
                      "phone": null,
                      "gender": null,
                      "created_at": "2023-09-29T10:12:29.292Z",
                      "updated_at": "2023-09-29T10:12:29.292Z",
                      "is_deleted": false
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "not found",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 404,
                  "result": "not found",
                  "message": "record data not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify/{userId}": {
      "put": {
        "description": "verify data user as admin",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "description": "data user id",
            "required": true,
            "value": 3
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "user has been activated"
                }
              }
            }
          },
          "404": {
            "description": "data not found",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 404,
                  "result": "data not found",
                  "message": "Record to update not found"
                }
              }
            }
          }
        }
      }
    },
    "/users/verify-email?key=random-string": {
      "put": {
        "tags": ["User"],
        "description": "Verify email user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "description": "random string that contains unique data email user",
            "value": "af55e2d-416b-4987-b7d5-a7af778ed9b242",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "Email successfully verified!"
                }
              }
            }
          },
          "400": {
            "description": "missing params key",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 400,
                  "result": "bad request",
                  "message": "Key params does not provided"
                }
              }
            }
          },
          "403": {
            "description": "invalid token or expired",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 403,
                  "result": "forbidden",
                  "message": "Invalid key or key already expired"
                }
              }
            }
          }
        }
      }
    },
    "/users/update": {
      "put": {
        "description": "Update User yang sedang login",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "username", "fullname", "nik", "gender"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "harus berformat email@domain.com"
                  },
                  "username": {
                    "type": "string"
                  },
                  "fullname": {
                    "type": "string"
                  },
                  "nik": {
                    "type": "string",
                    "description": "nik harus berisi 16 angka"
                  },
                  "gender": {
                    "type": "string",
                    "description": "pilihan gender hanya male atau female"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "data berhasil diperbarui"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/changepass": {
      "put": {
        "description": "Mengganti password User yang sedang login",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["currentPass", "newPass", "repeatPass"],
                "properties": {
                  "currentPass": {
                    "type": "string",
                    "description": "password saat ini",
                    "example": "currentpassword123"
                  },
                  "newPass": {
                    "type": "string",
                    "description": "password baru, harus menggunakan minimal 8 karakter dan setidaknya ada 1 huruf kecil, 1 huruf besar, 1 angka, juga 1 simbol",
                    "example": "NewPassword123!"
                  },
                  "repeatPass": {
                    "type": "string",
                    "description": "harus sama dengan password baru",
                    "example": "NewPassword123!"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "password anda berhasil diubah"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "ada error saat mencoba mengubah password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/resetpass": {
      "post": {
        "description": "reset user password",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "existing user email",
                    "example": "existingemail@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "password reset success, password was sent to your email"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "there is an error while resetting password"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "delete": {
        "description": "soft delete data user",
        "tags": ["User"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "schema": {
              "type": "number"
            },
            "description": "data user id",
            "value": 3,
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "successfully deleted record data"
                }
              }
            }
          },
          "404": {
            "description": "data not found",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 404,
                  "result": "not found",
                  "message": "data user not found"
                }
              }
            }
          }
        }
      }
    },
    "/feedback/{userId}": {
      "post": {
        "description": "Register User dan Admin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "input id User",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Feedback"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["content", "rating", "emergencies_id"],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "rating": {
                    "type": "number"
                  },
                  "emergencies_id": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "Success Create Feedback"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Feedback for this emergencies ID has already been created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "Feedback for this emergencies ID has already been created."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/message/newmessage": {
      "post": {
        "description": "New Message",
        "tags": ["Message"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["message", "latitude", "longitude"],
                "properties": {
                  "message": {
                    "type": "string"
                  },
                  "latitude": {
                    "type": "number",
                    "format": "decimal"
                  },
                  "longitude": {
                    "type": "number",
                    "format": "decimal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "Success Create newMessage"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Feedback for this emergencies ID has already been created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/message/getroom": {
      "get": {
        "description": "get room by admin",
        "tags": ["Message"],
        "security": [
          {
            "bearerAuth": []
          }
        ],

        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "successfully get data room"
                }
              }
            }
          },
          "404": {
            "description": "data not found",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 404,
                  "result": "not found",
                  "message": "room data not found"
                }
              }
            }
          }
        }
      }
    },
    "/message/getmessage/{id}": {
      "get": {
        "description": "get message by id room",
        "tags": ["Message"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id room",
            "description": "number of room",
            "schema": {
              "type": "number"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 200,
                  "result": "success",
                  "message": "successfully fetch data message"
                }
              }
            }
          },
          "404": {
            "description": "data not found",
            "content": {
              "application/json": {
                "example": {
                  "status_code": 404,
                  "result": "not found",
                  "message": "record data not found"
                }
              }
            }
          }
        }
      }
    },
    "/message/backupmessage": {
      "put": {
        "description": "Backup Message",
        "tags": ["Message"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["userId", "adminId"],
                "properties": {
                  "userId": {
                    "type": "string"
                  },
                  "adminId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 200
                    },
                    "result": {
                      "type": "string",
                      "example": "Success Backup Message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 400
                    },
                    "result": {
                      "type": "string",
                      "example": "bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status_code": {
                      "type": "number",
                      "example": 500
                    },
                    "result": {
                      "type": "string",
                      "example": "server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
